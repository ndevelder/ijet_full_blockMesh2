/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.2                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0 0 -0.04361938737)		//0
	(0.05 0 -0.04361938737)		//1
	(1 0 -0.04361938737)		//2
	(0 0.2 -0.04361938737)		//3
	(0.05 0.2 -0.04361938737)	//4
	(1 0.2 -0.04361938737)		//5
	(0.05 0.4 -0.04361938737)	//6
	(1 0.4 -0.04361938737)		//7
	(0 0 0.04361938737)			//8
	(0.05 0 0.04361938737)		//9
	(1 0 0.04361938737)			//10
	(0 0.2 0.04361938737)		//11
	(0.05 0.2 0.04361938737)	//12
	(1 0.2 0.04361938737)		//13
	(0.05 0.4 0.04361938737)	//14
	(1 0.4 0.04361938737)		//15
);


blocks
(
    hex (0 1 4 3 8 9 12 11) (64 256 1) edgeGrading (0.08 0.08 0.08 0.08 64 64 64 64 1 1 1 1)
    hex (1 2 5 4 9 10 13 12) (128 256 1) edgeGrading (192 192 192 192 64 64 64 64 1 1 1 1)
    hex (4 5 7 6 12 13 15 14) (128 64 1) edgeGrading (192 192 192 192 1 1 1 1 1 1 1 1)
);

edges
(
);

boundary
(
    INLET
    {
        type patch;
        faces
        (
            (3 11 12 4)
        );
    }
    OUTLET_RIGHT
    {
        type patch;
        faces
        (
            (2 5 13 10)
			(5 7 15 13)
        );
    }
    OUTLET_TOP
    {
        type wall;
        faces
        (
            (6 14 15 7)
        );
    }
    WALL_JET
    {
        type wall;
        faces
        (
            (4 6 14 12)
        );
    }
    WALL_BOTTOM
    {
        type wall;
        faces
        (
            (0 8 9 1)
			(1 9 10 2)
        );
    }
    ROT_AXIS
    {
        type patch;
        faces
        (
            (0 3 11 8)
        );
    }
);

mergePatchPairs
(
);